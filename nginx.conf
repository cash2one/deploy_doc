nginx 全局变量:

arg_PARAMETER    #这个变量包含GET请求中，如果有变量PARAMETER时的值。
args                    #这个变量等于请求行中(GET请求)的参数，如：foo=123&bar=blahblah;
binary_remote_addr #二进制的客户地址。
body_bytes_sent    #响应时送出的body字节数数量。即使连接中断，这个数据也是精确的。
content_length    #请求头中的Content-length字段。
content_type      #请求头中的Content-Type字段。
cookie_COOKIE    #cookie COOKIE变量的值
document_root    #当前请求在root指令中指定的值。
document_uri      #与uri相同。
host                #请求主机头字段，否则为服务器名称。
hostname          #Set to themachine’s hostname as returned by gethostname
http_HEADER
is_args              #如果有args参数，这个变量等于”?”，否则等于”"，空值。
http_user_agent    #客户端agent信息
http_cookie          #客户端cookie信息
limit_rate            #这个变量可以限制连接速率。
query_string          #与args相同。
request_body_file  #客户端请求主体信息的临时文件名。
request_method    #客户端请求的动作，通常为GET或POST。
remote_addr          #客户端的IP地址。
remote_port          #客户端的端口。
remote_user          #已经经过Auth Basic Module验证的用户名。
request_completion #如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(Empty)。
request_method    #GET或POST
request_filename  #当前请求的文件路径，由root或alias指令与URI请求生成。
request_uri          #包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。不能修改。
scheme                #HTTP方法（如http，https）。
server_protocol      #请求使用的协议，通常是HTTP/1.0或HTTP/1.1。
server_addr          #服务器地址，在完成一次系统调用后可以确定这个值。
server_name        #服务器名称。
server_port          #请求到达服务器的端口号。


set_real_ip_from 10.0.0.0/8;
set_real_ip_from 192.168.0.0/16;
real_ip_header X-Real-IP;
include xnet.conf;

fastcgi_connect_timeout 30000;
fastcgi_send_timeout 30000;
fastcgi_read_timeout 30000;

# 引用 vhosts 目录中所有配置文件
include vhosts/*.conf;

rewrite 规则
一．正则表达式匹配，其中：
* ~ 为区分大小写匹配
* ~* 为不区分大小写匹配
* !~和!~*分别为区分大小写不匹配及不区分大小写不匹配
二．文件及目录匹配，其中：
* -f和!-f用来判断是否存在文件
* -d和!-d用来判断是否存在目录
* -e和!-e用来判断是否存在文件或目录
* -x和!-x用来判断文件是否可执行
三．rewrite指令的最后一项参数为flag标记，flag标记有：
1.last    相当于apache里面的[L]标记，表示rewrite。
2.break本条规则匹配完成后，终止匹配，不再匹配后面的规则。
3.redirect  返回302临时重定向，浏览器地址会显示跳转后的URL地址。
4.permanent  返回301永久重定向，浏览器地址会显示跳转后的URL地址。


upstream myserver {
  # down 表示当前的 server 暂时不参与负载
  server 127.0.0.1:9090 down;
  # weight 默认为1; weight越大，负载的权重就越大。
  server 127.0.0.1:8080 weight=2;
  server 127.0.0.1:6060;
  # backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。
  server 127.0.0.1:7070 backup;
  ip_hash;
}
# max_fails ：允许请求失败的次数默认为1. 当超过最大次数时，返回proxy_next_upstream 模块定义的错误
# fail_timeout: max_fails 次失败后，暂停的时间。
server {
  proxy_pass http://myserver;
}

# log_format main '$remote_addr - $remote_user [$time_local] "$request" '
#                '"$http_referer" $status $body_bytes_sent $request_body '
#                '"$http_user_agent" "$http_x_forwarded_for"';

# nginx -s reload
# nginx -s stop
server {
  listen 80;
  server_name at.redky.com;
  index index.html index.htm index.php;
  root /search/path/;

  # location 匹配命令
  # =     普通字符精确匹配
  # ~     执行一个正则表达式, 并且区分大小写
  # ~*    不区分大小写
  # ^~    普通字符匹配, 如果选项匹配, 只匹配此选项
  # @     定义一个命名的 location; 使用在内部定向时.
  # 匹配优先级与配置文件书写顺序无关

  location ~ \.php?$ {
    # 使用 include 文件时, 相对于 conf 目录
    include fcgi.conf;
  }

  # 只匹配 /50x.html
  location = /50x.html {
    root html;
  }

  # 匹配任何请求, 因为所有请求都是以 / 开始
  # 但是更长字符匹配或者正则表达式匹配会优先匹配
  location / {
    rewrite "^/index.html" /index.php permanent;
  }

  # 匹配任何以 /bbs 开始的请求, 并且停止匹配其它 location
  location ^~ /bbs {
    proxy_pass http://...../wiki.php;
    proxy_redirect default;
  }

  # 匹配以 gif, jpg, jpeg 结尾的请求
  # 但是所有 /bbs 目录下的请求由上面 location 处理.
  location ~* \.(gif|jpg|jpeg)$ {

  }

  location /skins/thumb {
    alias /search/path;
  }

  access_log logs/ie_access_log main;
  error_log logs/ie_error_log;

  error_page 404 /404.html;
  error_page 502 503 504 /50x.html;
  error_page 500 = @server_error;

  location @server_error {
    proxy_pass http://...;
  }

  location /ebook/ {
    # 如果不存在文件
    if (!-e $request_filename) {
      rewrite ^/ebook/index.html$ /site/index.php?t=1&args last;
      # return 404;
    }
  }

  location /server-status {
    stub_status on;
    # 允许 10.0.0.1 到 10.255.255.254 ip 段
    allow 10.0.0.0/8;

    # 屏蔽 ip 段 123.45.0.1 到 123.45.255.254
    # deny 124.45.0.0/16;

    # 屏蔽 ip 段 123.45.1.1 到 123.45.1.254
    # deny 123.45.1.0/24;

    # 屏蔽所有 ip 地址
    deny all;

    # 允许所有 ip 地址.
    # allow all;
  }

  # 屏蔽单个 ip 地址
  deny 165.91.122.67;
  # 允许单个 ip 地址
  allow 10.129.156.49;
  # 把 allow/deny 放到 http 或 server 块决定 config 的作用域.

  location ~ \.(php|php5)$ {
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_index index.php;
    fastcgi_split_path_info ^(.+\.php)(.*)$;
    fastcgi_param PATH_INFO $document_root&fastcgi_script_name;
  }

  rewrite "^/bbs/mac/?$" /bbs/index.html last;


  location ~ ^/bbs/data/attachments/ {
    set $forbidden 1;
    if ($http_user_agent ~ "^(SogouIMEMiniSetup)") {
      set $forbidden 0;
    }
    if ($http_referer ~* "(\.sogou.com|\.sohu\.com)") {
      set $forbidden 0;
    }
    if ($forbidden = 1) {
      return 403;
    }
  }

  location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
    expires 30d;
  }

  location ~ .*\(js|css)$ {
    expires 1h;
  }

}


nignx 配置:

nginx.conf {

user www-data;
worker_processes 4;　
pid /run/nginx.pid;

events {
	worker_connections 768; # 一个woker的最大连接数
	use epoll;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	keepalive_timeout 300s;   # 前后两次请求的超时间隔
	keepalive_requests 2147483647;　# 一个连接最多请求次数

	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##

	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}


}

nginx 代理服务器配置

upload_server_nginx.conf {

# the upstream component nginx needs to connect to
upstream django {
    server unix:///home/qiu/DataServerEnv/DataServer/data_server.sock; # for a file socket
    #server 127.0.0.1:8001; # for a web port socket (we'll use this first)
    keepalive 10; # 上游服务器最大承载连接数
}

# configuration of the server
server {
    # the port your site will be served on
    listen      9000;
    # the domain name it will serve for
    server_name 127.0.0.1; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # log
    access_log /var/log/nginx/data_access.log;
        error_log /var/log/nginx/data_error.log;

    # Django data
    location /data  {
        alias /home/qiu/DataServerEnv/DataServer/data;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/qiu/DataServerEnv/DataServer/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django; # 使用uwsgi协议
        include     /home/qiu/DataServerEnv/DataServer/uwsgi_params; # the uwsgi_params file you installed
    }
}

}